/* Clearfix */ 
@mixin clearfix() {
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}

/* Justify */
@mixin justify() {
	text-align: justify;
	-ms-text-justify: distribute; /* ie */

	&::after {
		content: '';
		display: inline-block;
		width: 100%;
	}
}

/* List reset styles */
@mixin listReset() {
	padding: 0;
	margin: 0;
	
	list-style: none;
}

/* Table reset styles */
@mixin tableReset() {
	border: none;
	border-spacing: 0;

	td {
		border: none;
		border-spacing: 0;
		
		vertical-align: top;
	}
}

/* Middler 
 * 
 * Mix this to parent of inline-blocks
 * and they all can me va:m
 */
@mixin middler() {
	&::after {
		content: '';
		
		display: inline-block;
		height: 100%;
		vertical-align: middle;
	} 
}

/* Create a border-triangle 
 * params:
 * 		$direction: [top, right, bottom, left]
 *		$size
 * 		$color
 * 		$type: `display` value
 */
@mixin triangle($direction, $size, $color, $mode: 'normal', $type: inline-block) {
	display: $type;
	$direction-map: (
		'top': 'bottom',
		'right': 'left',
		'bottom': 'top',
		'left': 'right'
	);
	$opposite-direction: map-get($direction-map, $direction);
	
	@each $d in top right bottom left {
		@if $d == $opposite-direction {
			border-#{$d}: $size solid $color;
		}
		@else {
			@if $d != $direction {
				@if $mode == 'normal' {
					border-#{$d}: $size solid transparent;	
				}

				@if $mode == 'wide' {
					border-#{$d}: $size * 1.5 solid transparent;	
				}
			}
		}
	}
}